// Angular 15+ imports - use @use instead of @import for Angular Material
@use '@angular/material' as mat;

// Include the common styles for Angular Material
@include mat.core();

// Custom palette definitions for Angular 15+
$mat-blue: (
    50: #eff1f3,
    100: #FFFFFF,
    200: #a5c1dc,
    300: #68a0d6,
    400: #4788c7,
    500: #FFFFFF,
    600: #0358ab,
    700: #424242,
    800: #154a7d,
    900: #b3bdc7,
    A100: #617284,
    A200: #587594,
    A400: #3e6792,
    A700: #062c54,
    contrast: (
        50: rgba(0, 0, 0, 0.87),
        100: rgba(255, 255, 255, 1),
        200: rgba(0, 0, 0, 0.87),
        300: rgba(0, 0, 0, 0.87),
        400: rgba(0, 0, 0, 0.87),
        500: rgba(0, 0, 0, 0.87),
        600: rgba(255, 255, 255, 1),
        700: rgba(255, 255, 255, 1),
        800: rgba(255, 255, 255, 1),
        900: rgba(255, 255, 255, 1),
        A100: rgba(0, 0, 0, 0.87),
        A200: rgba(0, 0, 0, 0.87),
        A400: rgba(0, 0, 0, 0.87),
        A700: rgba(0, 0, 0, 0.87),
    ),
);

$mat-orange: (
    50: #fff3e0,
    100: #D9F2FE,
    200: #ffcc80,
    300: #ffb74d,
    400: #ffa726,
    500: #f5d58d,
    600: #F5A772,
    700: #15A9F4,
    800: #ef6c00,
    900: #2095cc,
    A100: #ffd180,
    A200: #ffab40,
    A400: #ff9100,
    A700: #ff6d00,
    contrast: (
        50: rgba(0, 0, 0, 0.87),
        100: rgba(0, 0, 0, 0.87),
        200: rgba(0, 0, 0, 0.87),
        300: rgba(0, 0, 0, 0.87),
        400: rgba(0, 0, 0, 0.87),
        500: rgba(0, 0, 0, 0.87),
        600: rgba(0, 0, 0, 0.87),
        700: rgba(0, 0, 0, 0.87),
        800: rgba(255, 255, 255, 1),
        900: rgba(255, 255, 255, 1),
        A100: rgba(0, 0, 0, 0.87),
        A200: rgba(0, 0, 0, 0.87),
        A400: rgba(0, 0, 0, 0.87),
        A700: rgba(0, 0, 0, 0.87),
    ),
);

// Create the theme palettes
$theme-primary: mat.define-palette($mat-blue);
$theme-accent: mat.define-palette($mat-orange);
$theme-warn: mat.define-palette(mat.$red-palette);

// Simple mixin for theme-based configurations
@mixin theme-based-configurations($theme) {
    // Define CSS custom properties using direct color values
    --primary-color: #0358ab;
    --accent-color: #f5d58d;
    --warn-color: #f44336;
    --primary-lighter: #FFFFFF;
    --primary-darker: #424242;
    --background-color: #ffffff;
}

.theme-igot {
    &.day-mode {
        // Create light theme
        $theme: mat.define-light-theme((
            color: (
                primary: $theme-primary,
                accent: $theme-accent,
                warn: $theme-warn,
            ),
            typography: mat.define-typography-config(
                $font-family: 'Roboto, sans-serif'
            ),
        ));

        color: #424242 !important;

        // Apply the theme
        @include mat.all-component-themes($theme);
        @include theme-based-configurations($theme);

        .mat-app-background {
            color: #4a4a4a;
            background-color: #ffffff;
        }
    }

    &.night-mode {
        // Create dark theme
        $theme: mat.define-dark-theme((
            color: (
                primary: $theme-primary,
                accent: $theme-accent,
                warn: $theme-warn,
            ),
            typography: mat.define-typography-config(
                $font-family: 'Roboto, sans-serif'
            ),
        ));

        // Apply the theme
        @include mat.all-component-themes($theme);
        @include theme-based-configurations($theme);

        // Override for dark mode
        --background-color: #444444;

        .mat-app-background {
            background-color: #444444;
        }
    }
}